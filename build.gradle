plugins {
    id "com.jfrog.artifactory" version "4.15.2"
    id "org.sonarqube" version "2.8"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    group = "net.voxelindustry"
    compileJava.options.encoding = 'UTF-8'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    apply plugin: "maven-publish"
    apply plugin: "com.jfrog.artifactory"

    if (project != rootProject) {
        eclipse.project.name = (rootProject.name + project.path).replaceAll(':', '-')
    }

    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        publish {
            repository {
                repoKey = 'voxelindustry'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications('mavenJava')
            }
        }
    }

    // Fix JDK version use in eclipse
    eclipse {
        jdt {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    repositories {
        maven { url 'http://maven.ferenyr.info/artifactory/libs-release' }
        mavenCentral()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifactId archivesBaseName
                artifact source: sourcesJar, classifier: 'sources', extension: 'jar'
            }
        }
    }

    // Add references to core project
    tasks.cleanEclipse.doLast {
        project.configurations.stream()
                .flatMap({ config -> config.dependencies.stream() })                  // get all deps
                .filter({ dep -> dep instanceof ProjectDependency })                  // that are Projects
                .forEach({ dep -> eclipse.project.referencedProjects.add(dep.name) }) // and add to referencedProjects
    }
    tasks.eclipse.dependsOn(cleanEclipse)

    artifactoryPublish.dependsOn build

    apply plugin: 'jacoco'
}

project(":common") {
    archivesBaseName = "brokkgui-common"

    version = project.brokkgui_version
    dependencies {
        api "fr.ourten:teabeans:${project.teabeans_version}"
        api "net.voxelindustry:hermod:${project.hermod_version}"
        api "net.voxelindustry:brokkcolor:${project.brokkcolor_version}"

        implementation "org.apache.commons:commons-lang3:3.4"
        implementation "com.google.code.findbugs:jsr305:3.0.1"
        implementation "commons-io:commons-io:2.5"
        implementation "com.google.guava:guava:21.0"
        implementation "com.google.code.gson:gson:2.8.0"

        testCompile('org.junit.jupiter:junit-jupiter-api:5.6.1')
        testCompile('org.mockito:mockito-core:3.3.3')
        testCompile('org.mockito:mockito-junit-jupiter:3.3.3')
        testCompile('org.assertj:assertj-core:3.15.0')

        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.6.1')
    }
}

project(":element") {
    archivesBaseName = "brokkgui-elements"

    version = project.brokkgui_version

    dependencies {
        api project(":common")
        api project(":style")

        implementation "org.apache.commons:commons-lang3:3.4"
        implementation "com.google.code.findbugs:jsr305:3.0.1"
        implementation "commons-io:commons-io:2.5"
        implementation "com.google.guava:guava:21.0"
    }
}

project(":style") {
    archivesBaseName = "brokkgui-style"

    version = project.brokkgui_version

    dependencies {
        api project(":common")

        implementation "com.google.code.gson:gson:2.8.0"
        implementation "org.apache.commons:commons-lang3:3.4"
        implementation "com.google.code.findbugs:jsr305:3.0.1"
        implementation "commons-io:commons-io:2.5"
        implementation "com.google.guava:guava:21.0"

        testCompile('org.junit.jupiter:junit-jupiter-api:5.6.1')
        testCompile('org.mockito:mockito-core:3.3.3')
        testCompile('org.mockito:mockito-junit-jupiter:3.3.3')
        testCompile('org.assertj:assertj-core:3.15.0')

        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.6.1')
    }
}

project(":immediate") {
    archivesBaseName = "brokkgui-immediate"

    version = project.brokkgui_version

    dependencies {
        api project(":common")
        api project(":style")

        implementation "org.apache.commons:commons-lang3:3.4"
        implementation "com.google.code.findbugs:jsr305:3.0.1"
        implementation "commons-io:commons-io:2.5"
        implementation "com.google.guava:guava:21.0"
    }
}

project(":core") {
    archivesBaseName = "brokkgui-core"

    version = project.brokkgui_version

    dependencies {
        api project(":common")
        api project(":element")
        api project(":immediate")

        api "fr.ourten:teabeans:${project.teabeans_version}"

        implementation "org.apache.commons:commons-lang3:3.4"
        implementation "com.google.code.findbugs:jsr305:3.0.1"
        implementation "commons-io:commons-io:2.5"
        implementation "com.google.guava:guava:21.0"

        testCompile('org.junit.jupiter:junit-jupiter-api:5.6.1')
        testCompile('org.mockito:mockito-core:3.3.3')
        testCompile('org.mockito:mockito-junit-jupiter:3.3.3')
        testCompile('org.assertj:assertj-core:3.15.0')

        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.6.1')
    }
}

apply plugin: 'org.sonarqube'

sonarqube {
    properties {
        property "sonar.host.url", project.hasProperty('sonarqube_url') ? project.sonarqube_url : System.getenv('SONARQUBE_URL')
        property "sonar.login", project.hasProperty('sonarqube_login') ? project.sonarqube_login : System.getenv('SONARQUBE_LOGIN')
        property "sonar.projectKey", "BrokkGUI"
        property "sonar.groovy.binaries", "${project.buildDir.name}${File.separator}classes"
    }
}